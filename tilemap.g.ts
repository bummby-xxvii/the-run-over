// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.darkGroundNorthEast0,sprites.dungeon.darkGroundNorthWest0,sprites.dungeon.darkGroundNorthWest1,sprites.dungeon.darkGroundCenter,sprites.dungeon.darkGroundNorth], TileScale.Sixteen);
            case "level4":
            case "level3":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . 2 2 2 2 2 2 2 . . 2 2 2 2 
. . . . . . . . . . . . . . . . 
2 2 . . . . . . . . . . . . . . 
2 2 . . 2 2 2 . . 2 2 2 2 2 . . 
2 2 . . 2 2 2 . . 2 2 2 2 2 . . 
2 2 . . 2 2 2 . . 2 2 2 2 2 . . 
2 2 . . 2 2 2 . . 2 2 2 2 2 . . 
. . . . . . . . . 2 2 2 2 2 . . 
. . . . . . . . . 2 . . 2 2 . . 
2 . . 2 2 . . . . 2 . . . . . . 
2 . . 2 2 2 2 2 2 2 . . . . . . 
2 . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.builtin.forestTiles0,sprites.dungeon.floorDarkDiamond], TileScale.Sixteen);
            case "level6":
            case "level5":return tiles.createTilemap(hex`1000100003070707070707070707070707070702080a09090909090909090909090909060809090909090909090909090909090608090909090909090909090909090906080909090909090909090909090909060809090909090909090909090909090608090909090909090909090909090906090909090909090b0b0b090909090906080909090909090b0b0b090909090906080909090909090b0b0b0909090909060809090909090909090909090909090608090909090909090909090909090906080909090909090909090909090909060809090909090909090909090909090608090909090909090909090909090c0601050505050505050505050505050504`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
. . . . . . . 2 2 2 . . . . . 2 
2 . . . . . . 2 2 2 . . . . . 2 
2 . . . . . . 2 2 2 . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.greenOuterSouthEast,sprites.dungeon.greenOuterNorthEast,sprites.dungeon.greenOuterNorthWest,sprites.dungeon.greenOuterSouthWest,sprites.dungeon.greenOuterSouth0,sprites.dungeon.greenOuterEast1,sprites.dungeon.greenOuterNorth0,sprites.dungeon.greenOuterWest1,sprites.dungeon.floorDarkDiamond,sprites.dungeon.chestClosed,sprites.dungeon.collectibleInsignia,sprites.dungeon.stairLarge], TileScale.Sixteen);
            case "level8":
            case "level7":return tiles.createTilemap(hex`1000100002030303030303030303030303030305070b0101010101010101010101010106070101010101010101010101010101060701010101010101010101010101010607010101010101010101010101010106070101010102030303030501010101060c0101010107010101010a0101010106070101010107010101010a0101010106070101010107010101010a010101010607010101010809090909040101010106070101010101010101010b01010101060701010101010101010101010101010607010101010101010101010101010106070101010101010101010101010101060701010101010101010101010101010608090909090909090909090909090904`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . 2 2 2 2 2 2 . . . . 2 
. . . . . 2 2 2 2 2 2 . . . . 2 
2 . . . . 2 2 2 2 2 2 . . . . 2 
2 . . . . 2 2 2 2 2 2 . . . . 2 
2 . . . . 2 2 2 2 2 2 . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorLight1,sprites.dungeon.greenOuterNorthWest,sprites.dungeon.greenOuterNorth0,sprites.dungeon.greenOuterSouthWest,sprites.dungeon.greenOuterNorthEast,sprites.dungeon.greenOuterEast0,sprites.dungeon.greenOuterWest1,sprites.dungeon.greenOuterSouthEast,sprites.dungeon.greenOuterSouth0,sprites.dungeon.greenOuterEast1,sprites.dungeon.chestOpen,sprites.dungeon.doorOpenWest], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level0":
            case "level2":return tiles.createTilemap(hex``, img`
2 . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 . . 2 2 . . . . 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 . . . . . . 2 2 2 2 2 2 2 
2 2 2 . . . . . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.builtin.forestTiles0], TileScale.Sixteen);
            case "level11":
            case "level10":return tiles.createTilemap(hex`1000100002020202030a0203040404040404040a020202020807020506060606060601070202020208070202020202020202080703040404010104040a0202020202080705060606010106010702020202020807020202020807020807020202020208070304040401070208010404040404010705060606010702080106060606060107020202020807020807020202020208070202020208070208010b0b02020208070202020208070205060b0b02020208070202020208070202020202020202080702020202080104040404040404040107020202020506060606060606060606090202020202020202020202020202020202020202020202020202020202020202`, img`
2 2 2 2 . . 2 . . . . . . . . . 
2 2 2 2 . . 2 . . . . . . . . . 
2 2 2 2 . . 2 2 2 2 2 2 2 2 . . 
. . . . . . . . . 2 2 2 2 2 . . 
. . . . . . . . . 2 2 2 2 2 . . 
2 2 2 2 . . 2 . . 2 2 2 2 2 . . 
. . . . . . 2 . . . . . . . . . 
. . . . . . 2 . . . . . . . . . 
2 2 2 2 . . 2 . . 2 2 2 2 2 . . 
2 2 2 2 . . 2 . . 2 2 2 2 2 . . 
2 2 2 2 . . 2 . . 2 2 2 2 2 . . 
2 2 2 2 . . 2 2 2 2 2 2 2 2 . . 
2 2 2 2 . . . . . . . . . . . . 
2 2 2 2 . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.castle.tilePath5,sprites.builtin.forestTiles0,sprites.castle.tilePath1,sprites.castle.tilePath2,sprites.castle.tilePath7,sprites.castle.tilePath8,sprites.castle.tilePath6,sprites.castle.tilePath4,sprites.castle.tilePath9,sprites.castle.tilePath3,sprites.swamp.swampTile2], TileScale.Sixteen);
            case "level13":
            case "level12":return tiles.createTilemap(hex`10001000040505050505050505060606060606020a1201010101010101010101010101070a0101010101010101010101010101070a0101010101010101010101010101070a0101010101010101010101010101070a0101110104050505050201010101070a011101010a0406060207010101010711110101010a0b0d0c070701010101070a110111010a0b0e0f070701010101070a010101010a031010090701010101070a0111010103101010100901010101070a0101010112010101010101010101070a0101010101010101010101010101070a0101010101010101010101010101070a01010101010101010101010101010703080808080808080808080808080809`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . 2 2 2 2 2 2 . . . . 2 
2 . . . . 2 2 2 2 2 2 . . . . 2 
. . . . . 2 2 2 2 2 2 . . . . 2 
2 . . . . 2 2 2 2 2 2 . . . . 2 
2 . . . . 2 2 2 2 2 2 . . . . 2 
2 . . . . 2 2 2 2 2 2 . . . . 2 
2 . . . . 2 . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorLightMoss,sprites.dungeon.purpleOuterNorthEast,sprites.dungeon.purpleOuterSouthEast,sprites.dungeon.purpleOuterNorthWest,sprites.dungeon.purpleOuterNorth0,sprites.dungeon.purpleOuterNorth1,sprites.dungeon.purpleOuterEast0,sprites.dungeon.purpleOuterSouth0,sprites.dungeon.purpleOuterSouthWest,sprites.dungeon.purpleOuterWest1,sprites.dungeon.purpleOuterWest0,sprites.dungeon.purpleInnerNorthEast,sprites.dungeon.purpleInnerNorthWest,sprites.dungeon.purpleInnerSouthWest,sprites.dungeon.purpleInnerSouthEast,sprites.dungeon.purpleOuterSouth1,sprites.castle.tilePath5,sprites.dungeon.chestOpen], TileScale.Sixteen);
            case "level15":
            case "level14":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 . . . 2 2 2 
2 . . . . 2 2 . . 2 . . . 2 . . 
2 . . . . . 2 . . 2 . . . 2 . . 
2 . . . . . 2 . . 2 . . . 2 . . 
2 . . 2 . . 2 . . 2 2 2 2 2 . . 
2 . . 2 . . . . . 2 . . . . . . 
. . . 2 . . . . . 2 . . . . . . 
. . 2 2 . . . . . 2 . . 2 2 2 2 
. . 2 2 . . . . . . . . . . . . 
. . 2 2 . . . . . . . . . . . . 
. . 2 2 2 2 2 . . 2 . . 2 2 2 2 
. . . . . . . . . 2 . . 2 . . . 
. . . . . . . . . 2 . . 2 . . . 
. . 2 2 2 2 2 2 2 2 . . 2 . . . 
. . 2 2 2 2 2 2 . . . . 2 . . . 
. . 2 2 2 2 2 2 . . . . 2 . . . 
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.builtin.forestTiles0,sprites.castle.tilePath1,sprites.castle.tilePath7,sprites.castle.tilePath8,sprites.castle.tilePath2], TileScale.Sixteen);
            case "level17":
            case "level16":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 . 2 2 2 2 2 2 2 2 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 . . . . . . . . . . . 2 2 
2 2 2 . . . . . . . . . . . 2 2 
2 2 2 . . . . . . . . . . . 2 2 
2 2 2 . . . . . . . . . . . 2 2 
2 2 2 . . . . . . . . . . . 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.castle.tilePath5,sprites.builtin.forestTiles0,sprites.dungeon.doorOpenNorth,sprites.dungeon.greenOuterNorth1], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
